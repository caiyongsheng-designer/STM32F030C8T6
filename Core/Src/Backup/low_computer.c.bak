#include "main.h"
void LOW_COMPUTER_CTROL(void)
{
	  struct UART_RECEIVE Uart1_Receive; 
	  uint8_t SPI_data_len=0;
	  uint16_t SPI_75602_Receive=0;
	  uint8_t  SPI_receive_data[100];
    Uart1_Receive = Uart1_Receive_data();
    if 	((Uart1_Receive.UART1_Receive_Flag ==1 )&& (Uart1_Receive.UART1_Receive_data_len != 0))
		{
		   if((Uart1_Receive.UART1_Receive_data[0]==0x5a)&&
				 (Uart1_Receive.UART1_Receive_data[1]==0xa5)&&
			   (Uart1_Receive.UART1_Receive_data[2]==0x01))            //TLE75602芯片
			 {
				 switch (Uart1_Receive.UART1_Receive_data[4] )
				 {
					 case 1 : 
						SPI_data_len =  Uart1_Receive.UART1_Receive_data[3]-1;
					 if(SPI_data_len>=51)
					 {
					    DEBUG("可发送字节长度最大为50，超长请重新发送");
					 }else{
						  MX_SPI2_Init();
						  delay_us(100);
					    SPI_CS_Enable();						 
					    HAL_SPI_TransmitReceive(&hspi2,Uart1_Receive.UART1_Receive_data+5,
						                          SPI_receive_data,SPI_data_len, 1000);
						  SPI_CS_Disable();			 
					    for (uint8_t i=0;i<SPI_data_len;i++)
					    {
					     DEBUG("Reveive data %x",SPI_receive_data[i]);
					    }	 
					 }	

           break;
					 
					 case 2 : 
						SPI_data_len =  Uart1_Receive.UART1_Receive_data[3]-1;
					 if(SPI_data_len>=51)
					 {
					    DEBUG("可发送字节长度最大为50，超长请重新发送");
					 }else{
						  MX_SPI2_Init();
						  delay_us(100);
					    SPI_CS_Enable();						 
					    HAL_SPI_TransmitReceive(&hspi2,Uart1_Receive.UART1_Receive_data+5,
						                          SPI_receive_data,SPI_data_len, 1000);
						  SPI_CS_Disable();
						  SPI_75602_Receive = SPI_75602_Receive | SPI_receive_data[0];
						  SPI_75602_Receive = SPI_75602_Receive << 8;
						  SPI_75602_Receive = SPI_75602_Receive | SPI_receive_data[1];
						  printf("5AA5010301%d",SPI_75602_Receive); 
					 }	

           break;
					 
					    default:
					//printf("输入指令错误，请重新输入\r\n");
				  break;					 
				 }
			 }else if((Uart1_Receive.UART1_Receive_data[0]==0x5a)&&             //GPIO控制
				 (Uart1_Receive.UART1_Receive_data[1]==0xa5)&&
			   (Uart1_Receive.UART1_Receive_data[2]==0x02))
			   {
			      switch (Uart1_Receive.UART1_Receive_data[4] )
				          {
										case 1 : 			
					            if(Uart1_Receive.UART1_Receive_data[5] == 0xff)
											{
										    HAL_GPIO_WritePin(GPIOA,GPIO_PIN_0,GPIO_PIN_SET);
												printf("5AA5020201FF"); 
											}else if(Uart1_Receive.UART1_Receive_data[5] == 0x01)
											{
											  HAL_GPIO_WritePin(GPIOA,GPIO_PIN_0,GPIO_PIN_RESET);
												printf("5AA502020101"); 
											}else{};
						          
											break;
					 
										case 2 : 
											 if(Uart1_Receive.UART1_Receive_data[5] == 0xff)
											{
										    HAL_GPIO_WritePin(GPIOB,GPIO_PIN_0,GPIO_PIN_SET);
												printf("5AA5020202FF"); 
											}else if(Uart1_Receive.UART1_Receive_data[5] == 0x01)
											{
											  HAL_GPIO_WritePin(GPIOB,GPIO_PIN_0,GPIO_PIN_RESET);
												printf("5AA502020201"); 
											}else{};
											break;
										case 3:
											 
					             if(Uart1_Receive.UART1_Receive_data[5] == 0xff)
											{
										    HAL_GPIO_WritePin(GPIOB,GPIO_PIN_7,GPIO_PIN_SET);
												printf("5AA5020203FF"); 
											}else if(Uart1_Receive.UART1_Receive_data[5] == 0x01)
											{
											  HAL_GPIO_WritePin(GPIOB,GPIO_PIN_7,GPIO_PIN_RESET);
												printf("5AA502020301"); 
											}else{};
											break;
										case 4:
											 
					             if(Uart1_Receive.UART1_Receive_data[5] == 0xff)
											{
										    HAL_GPIO_WritePin(GPIOA,GPIO_PIN_7,GPIO_PIN_SET);
												printf("5AA5020204FF"); 
											}else if(Uart1_Receive.UART1_Receive_data[5] == 0x01)
											{
											  HAL_GPIO_WritePin(GPIOA,GPIO_PIN_7,GPIO_PIN_RESET);
												printf("5AA502020401"); 
											}else{};
											break;
										default:
					//printf("输入指令错误，请重新输入\r\n");
										break;		
									}			 
			  
			   }else{};
       memset(RxBuffer,0x00,sizeof(RxBuffer));					 
			 }else{};
			 
		 }
